{"version":3,"sources":["C2D/E.ts","C2D/_Element/IBounds.ts","C2D/_Animation/ACenter.ts","C2D/_Animation/Animation.ts","C2D/_Element/Element.ts","C2D/_Element/Sprite.ts","C2D/_Event/IMouseEventMetas.ts","C2D/_Event/SpriteMouseEvent.ts","C2D/_Event/SpriteFocusEvent.ts","C2D/_Event/SpriteBlurEvent.ts","C2D/_Event/SpriteMouseMoveEvent.ts","C2D/_Event/SpriteClickEvent.ts","C2D/_Element/Stage.ts","C2D/_Element/Color.ts","C2D/_Element/Image.ts","C2D/_Element/TextPhrase.ts","C2D/_Element/Text.ts","C2D/_Animation/IFadeMetas.ts","C2D/_Animation/Fade.ts","C2D/_Animation/FadeIn.ts","C2D/_Animation/FadeOut.ts","C2D/_Animation/Delay.ts","C2D/_Element/Button.ts","C2D/_Animation/Combo.ts","C2D/_Animation/IAudioFadeMetas.ts","C2D/_Animation/AudioFadeOut.ts","C2D/_Animation/IMoveMetas.ts","C2D/_Animation/Move.ts","C2D/_Animation/Type.ts","C2D/_Animation/TypeDelay.ts","C2D/_Animation/WaitForClick.ts","C2D/_Animation/IShutterMetas.ts","C2D/_Animation/Shutter.ts","C2D/_Animation/IZoomMetas.ts","C2D/_Animation/Zoom.ts","C2D/_Animation/Shake.ts","@c2d.ts"],"names":[],"mappings":"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","file":"bigine.c2d.js","sourcesContent":["/**\n * 定义包异常。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      E.ts\n */\n\nnamespace C2D {\n    export class E extends Error {\n        public static ELEMENT_DEFERRED: string = '元素并未添加至舞台中';\n\n        /**\n         * 构造函数。\n         */\n        constructor(message: string) {\n            super();\n            if ('captureStackTrace' in Error)\n                Error['captureStackTrace'](this, E);\n            this.name = 'BigineC2DError';\n            this.message = message;\n        }\n    }\n}\n","/**\n * 声明画面元素区域接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Element/IBounds.ts\n */\n\nnamespace C2D {\n    export interface IBounds {\n        /**\n         * X 轴座标。\n         */\n        x: number;\n\n        /**\n         * Y 轴座标。\n         */\n        y: number;\n\n        /**\n         * 宽度。\n         */\n        w: number;\n\n        /**\n         * 高度。\n         */\n        h: number;\n    }\n}\n","/**\n * 定义画面动画管理中心组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/ACenter.ts\n */\n\n/// <reference path=\"Animation.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export class ACenter {\n        /**\n         * 已注册动画。\n         */\n        private static _: Animation[] = [];\n\n        /**\n         * 注册动画。\n         */\n        public static a(animation: Animation): number {\n            let _: Animation[] = ACenter._;\n            _.push(animation);\n            return _.length;\n        }\n\n        /**\n         * 获取指定动画。\n         */\n        public static g(id: number): Animation {\n            return ACenter._[--id];\n        }\n\n        /**\n         * 播放完结。\n         */\n        public static d(id: number): void {\n            let _: Animation[] = ACenter._;\n            if (_[--id])\n                delete _[id];\n        }\n\n        /**\n         * 中止播放。\n         */\n        public static h(id: number): void;\n        public static h(): void;\n        public static h(id?: number): void {\n            let _: Animation[] = ACenter._;\n            if (!id)\n                return Util.each(_, (animation: Animation, index: number) => {\n                    animation.h();\n                    delete _[index];\n                });\n            if (_[--id])\n                _[id].h();\n                delete _[id];\n        }\n\n        /**\n         * 暂停动画。\n         */\n        public static w(id: number): void;\n        public static w(): void;\n        public static w(id?: number): void {\n            let _: Animation[] = ACenter._;\n            if (!id)\n                return Util.each(_, (animation: Animation) => {\n                    animation.w();\n                });\n            if (_[--id])\n                _[id].w();\n        }\n\n        /**\n         * 恢复动画。\n         */\n        public static r(id: number): void;\n        public static r(): void;\n        public static r(id?: number): void {\n            let _: Animation[] = ACenter._;\n            if (!id)\n                return Util.each(_, (animation: Animation) => {\n                    animation.r();\n                });\n            if (_[--id])\n                _[id].r();\n        }\n    }\n}\n","/**\n * 定义抽象画面动画组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/Animation.ts\n */\n\n/// <reference path=\"../../../include/mozRequestAnimationFrame.d.ts\" />\n/// <reference path=\"../../../include/tsd.d.ts\" />\n/// <reference path=\"ACenter.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export class Animation {\n        /**\n         * 动画时长（单位：帧）。\n         */\n        protected _d: number;\n\n        /**\n         * 元信息。\n         */\n        protected _m: Util.IHashTable<any>;\n\n        /**\n         * 链。\n         */\n        protected _c: Animation[];\n\n        /**\n         * 循环次数。\n         */\n        protected _l: number;\n\n        /**\n         * 是否已播放。\n         */\n        protected _p: boolean;\n\n        /**\n         * 是否已中止。\n         */\n        protected _h: boolean;\n\n        /**\n         * 对象。\n         */\n        protected _t: any;\n\n        /**\n         * 暂停。\n         */\n        protected _w: boolean;\n\n        /**\n         * 序号。\n         */\n        protected _i: number;\n\n        /**\n         * 构造函数。\n         */\n        constructor(duration: number, metas?: Util.IHashTable<any>) {\n            this._d = Math.round(duration * 60 / 1000);\n            this._m = metas || {};\n            this._c = [];\n            this._l = 1;\n            this._p =\n            this._h =\n            this._w = false;\n            this._i = ACenter.a(this);\n        }\n\n        /**\n         * 链式动画。\n         */\n        public c(next: Animation): Animation {\n            this._c.push(next);\n            return this;\n        }\n\n        /**\n         * 循环。\n         */\n        public l(times?: number): Animation {\n            this._l = times || Infinity;\n            return this;\n        }\n\n        /**\n         * 执行。\n         */\n        public p(element: any): Promise<any> {\n            let r: Promise<any> = Promise.resolve(element),\n                counter: number = 0,\n                once: () => Promise<any> = () => {\n                    if (this._h)\n                        return r;\n                    return new Promise((resolve: (value: any) => void) => {\n                        let index: number = 0,\n                            done: () => void = () => {\n                                resolve(element);\n                            },\n                            task: FrameRequestCallback = (time: number) => {\n                                if (this._h || index >= this._d)\n                                    return done();\n                                if (!this._w)\n                                    this.$p(element, ++index, done);\n                                Animation.f(task);\n                            };\n                        Animation.f(task);\n                    }).then(() => {\n                        if (!this._h && ++counter < this._l)\n                            return once();\n                        return element;\n                    });\n                },\n                q: Promise<any>;\n            if (this._p || this._h)\n                return r;\n            this._p = true;\n            this._t = element;\n            q = once();\n            q.then(() => {\n                ACenter.d(this._i);\n            });\n            if (!this._c.length)\n                return q;\n            return q.then(() => Util.Q.every(this._c, (anime: Animation) => anime.p(element)));\n        }\n\n        /**\n         * 帧执行。\n         */\n        protected $p(element: any, elpased: number, done: () => void): void {\n            //\n        }\n\n        /**\n         * 中止。\n         */\n        public h(): Animation {\n            if (this._h)\n                return this;\n            this._h = true;\n            this.$h();\n            Util.each(this._c, (anime: Animation) => {\n                anime.h();\n            });\n            return this;\n        }\n\n        /**\n         * 中止处理。\n         */\n        protected $h(): void {\n            //\n        }\n\n        /**\n         * 暂停。\n         */\n        public w(): Animation {\n            this._w = true;\n            return this;\n        }\n\n        /**\n         * 恢复播放。\n         */\n        public r(): Animation {\n            this._w = false;\n            return this;\n        }\n\n        /**\n         * 获取暂停状态。\n         */\n        public gW(): boolean {\n            return this._w;\n        }\n\n        /**\n         * 获取编号。\n         */\n        public gI(): number {\n            return this._i;\n        }\n    }\n\n    export namespace Animation {\n        let raf: typeof window.requestAnimationFrame,\n            jobs: FrameRequestCallback[] = [],\n            elapsed: number = 0,\n            size: number;\n\n        if (Util.ENV.Window) {\n            raf = window.requestAnimationFrame ||\n                window.msRequestAnimationFrame ||\n                window.webkitRequestAnimationFrame ||\n                window.mozRequestAnimationFrame ||\n                window.oRequestAnimationFrame;\n            if (!raf) {\n                raf = (callback: FrameRequestCallback) => {\n                    jobs.push(callback);\n                    return 0;\n                };\n                setInterval(() => {\n                    elapsed += 5;\n                    size = jobs.length;\n                    if ((1 + elapsed % 50) % 3 || !size) return;\n                    Util.each(jobs.splice(0, size), (callback: FrameRequestCallback) => {\n                        callback(elapsed);\n                    });\n                }, 5);\n            }\n        } else\n            raf = (callback: FrameRequestCallback) => 0;\n\n        /**\n         * 帧处理。\n         */\n        export function f(callback: FrameRequestCallback, draw?: boolean): void {\n            raf.call(window, callback);\n        }\n    }\n}\n","/**\n * 定义抽象画面元素组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Element/Element.ts\n */\n\n/// <reference path=\"../E.ts\" />\n/// <reference path=\"IBounds.ts\" />\n/// <reference path=\"../_Animation/Animation.ts\" />\n/// <reference path=\"Sprite.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export class Element {\n        /**\n         * 区域。\n         */\n        protected _b: IBounds;\n\n        /**\n         * 是否绝对定位。\n         */\n        protected _a: boolean;\n\n        /**\n         * 缩放系数。\n         */\n        protected _s: number;\n\n        /**\n         * 旋转角度。\n         */\n        protected _r: number;\n\n        /**\n         * 透明度。\n         */\n        protected _o: number;\n\n        /**\n         * 发生变更。\n         */\n        protected _f: boolean;\n\n        /**\n         * 父元素。\n         */\n        protected _p: Sprite;\n\n        /**\n         * 编号。\n         */\n        protected _i: string;\n\n        /**\n         * 构造函数。\n         */\n        constructor(x: number, y: number, w: number, h: number, absolute?: boolean);\n        constructor(bounds: IBounds, absolute?: boolean);\n        constructor(x: any, ...args: any[]) {\n            if (!x || 'number' == typeof x) {\n                this._b = {\n                    x: x,\n                    y: args[0],\n                    w: args[1],\n                    h: args[2]\n                };\n                this._a = !!args[3];\n            } else {\n                this._b = x;\n                this._a = !!args[0];\n            }\n            this._b.x |= 0;\n            this._b.y |= 0;\n            this._b.w |= 0;\n            this._b.h |= 0;\n            this._r = 0;\n            this._s =\n                this._o = 1;\n            this._f = false;\n            this._i = '';\n        }\n\n        /**\n         * 获取区域信息。\n         */\n        public gB(): IBounds {\n            var bounds: IBounds = Util.clone(this._b),\n                r: number,\n                w: number,\n                h: number;\n            if (0 && this._r) {\n                r %= 180;\n                if (0 > r)\n                    r += 180;\n                if (90 == r) {\n                    r = bounds.x;\n                    bounds.x = bounds.y;\n                    bounds.y = r;\n                    r = bounds.w;\n                    bounds.w = bounds.h;\n                    bounds.h = r;\n                } else if (r) {\n                    r *= Math.PI / 180;\n                    w = (bounds.h / Math.abs(Math.tan(Math.PI / 2 - r)) + bounds.w) / 2 * Math.cos(r);\n                    h = (bounds.h / Math.abs(Math.tan(r)) + bounds.w) / 2 * Math.sin(r);\n                    bounds = {\n                        x: bounds.x + bounds.w / 2 - w,\n                        y: bounds.y + bounds.h / 2 - h,\n                        w: 2 * w,\n                        h: 2 * h\n                    };\n                }\n            }\n            if (!this._a) {\n                if (!this._p)\n                    throw new E(E.ELEMENT_DEFERRED);\n                var bp: IBounds = this._p.gB();\n                bounds.x += bp.x;\n                bounds.y += bp.y;\n            }\n            return bounds;\n        }\n\n        /**\n         * 移动 X 轴座标。\n         */\n        public x(value: number): Element {\n            this._b.x = value;\n            if (!this.gO())\n                return this;\n            return this.f();\n        }\n\n        /**\n         * 移动 Y 轴座标。\n         */\n        public y(value: number): Element {\n            this._b.y = value;\n            if (!this.gO())\n                return this;\n            return this.f();\n        }\n\n        /**\n         * 设置高度。\n         */\n        public sH(value: number): Element {\n            this._b.h = value;\n            if (!this.gO())\n                return this;\n            return this.f();\n        }\n\n        /**\n         * 设置宽度。\n         */\n        public sW(value: number): Element {\n            this._b.w = value;\n            if (!this.gO())\n                return this;\n            return this.f();\n        }\n\n        /**\n         * 缩放。\n         */\n        public s(ratio: number): Element {\n            if (1 == ratio)\n                return this;\n            this._b.w = 0 | this._b.w * ratio;\n            this._b.h = 0 | this._b.h * ratio;\n            this._s *= ratio;\n            if (!this.gO())\n                return this;\n            return this.f();\n        }\n\n        /**\n         * 获取缩放系数。\n         */\n        public gS(): number {\n            return this._s;\n        }\n\n        /**\n         * 旋转。\n         */\n        public r(degrees: number): Element {\n            if (this._r == degrees)\n                return this;\n            this._r = degrees % 360;\n            if (0 > this._r)\n                this._r += 360;\n            if (!this.gO())\n                return this;\n            return this.f();\n        }\n\n        /**\n         * 获取旋转度数。\n         */\n        public gR(): number {\n            return this._r;\n        }\n\n        /**\n         * 透明度。\n         */\n        public o(value: number): Element {\n            if (this._o == value)\n                return this;\n            if (0 > value) {\n                value = 0;\n            } else if (1 < value)\n                value = 1;\n            this._o = value;\n            return this.f();\n        }\n\n        /**\n         * 获取透明度。\n         */\n        public gO(): number {\n            return this._o * (this._p ? this._p.gO() : 1);\n        }\n\n        /**\n         * 绘制。\n         */\n        public d(context: CanvasRenderingContext2D): CanvasRenderingContext2D | Thenable<CanvasRenderingContext2D> {\n            this._f = false;\n            return context;\n        }\n\n        /**\n         * 执行动画。\n         */\n        public p(animation: Animation): Promise<Element> {\n            return animation.p(this);\n        }\n\n        /**\n         * 设置编号。\n         */\n        public i(id: string): Element {\n            this._i = id;\n            return this;\n        }\n\n        /**\n         * 获取编号。\n         */\n        public gI(): string {\n            return this._i;\n        }\n\n        /**\n         * 发生变更。\n         */\n        public f(): Element {\n            this._f = true;\n            if (this._p)\n                this._p.f(this);\n            return this;\n        }\n\n        /**\n         * 设置父元素。\n         */\n        public $p(parent: Sprite): Element {\n            this._p = parent;\n            return this;\n        }\n\n        /**\n         * 获取名称。\n         */\n        public gN(): string {\n            return '';\n        }\n    }\n}\n","/**\n * 定义画面组合元素组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Element/Sprite.ts\n */\n\n/// <reference path=\"Element.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export class Sprite extends Element implements Util.IEmittable {\n        /**\n         * 子元素集。\n         */\n        protected _d: Element[];\n\n        /**\n         * 事件监听。\n         */\n        private _l: Util.IHashTable<Util.IEventListener<any>[]>;\n\n        /**\n         * 是否透明（允许鼠标事件穿透）。\n         */\n        private _t: boolean;\n\n        /**\n         * 构造函数。\n         */\n        constructor(x: number, y: number, w: number, h: number, transparent?: boolean, absolute?: boolean);\n        constructor(bounds: IBounds, transparent?: boolean, absolute?: boolean);\n        constructor(x: any, y?: any, w?: any, h?: any, transparent?: boolean, absolute?: boolean) {\n            if ('object' == typeof x) {\n                super(x, w);\n                this._t = !!y;\n            } else {\n                super(x, y, w, h, absolute);\n                this._t = !!transparent;\n            }\n            this._d = [];\n            this._f = false;\n            this._l = {};\n        }\n\n        /**\n         * 缩放。\n         */\n        public s(ratio: number): Sprite {\n            Util.each(this._d, (el: Element) => {\n                el.s(ratio);\n            });\n            return <Sprite> super.s(ratio);\n        }\n\n        /**\n         * 旋转。\n         */\n        public r(degrees: number): Sprite {\n            Util.each(this._d, (el: Element) => {\n                el.r(degrees);\n            });\n            return <Sprite> super.r(degrees);\n        }\n\n        /**\n         * 绘制。\n         */\n        public d(context: CanvasRenderingContext2D): CanvasRenderingContext2D | Thenable<CanvasRenderingContext2D> {\n            var opacity: number = this.gO();\n            if (opacity && this._d.length) {\n                if (1 != opacity) {\n                    context.save();\n                    context.globalAlpha = opacity;\n                }\n                return Util.Q.every(this._d, (el: Element) => el.d(context))\n                    .then(() => {\n                        if (1 != opacity)\n                            context.restore();\n                        return super.d(context);\n                    });\n            }\n            return super.d(context);\n        }\n\n        /**\n         * 发生变更。\n         */\n        public f(child?: Element): Sprite {\n            this._f = true;\n            if (this._p)\n                this._p.f(this);\n            return this;\n        }\n\n        /**\n         * 设置父元素。\n         */\n        public $p(parent?: Sprite): Sprite {\n            if (!parent && this._p)\n                return <Sprite> this._p;\n            return <Sprite> super.$p(parent);\n        }\n\n        /**\n         * 新增事件监听。\n         */\n        public addEventListener(type: string, listener: Util.IEventListener<Sprite>): Sprite {\n            this._l[type] = this._l[type] || [];\n            this._l[type].push(listener);\n            return this;\n        }\n\n        /**\n         * 取消事件监听。\n         */\n        public removeEventListener(type: string, listener: Util.IEventListener<Sprite>): Sprite {\n            Util.some(this._l[type] || [], (reged: Util.IEventListener<any>, index: number) => {\n                if (reged == listener) {\n                    this._l[type].splice(index, 1);\n                    return true;\n                }\n                return false;\n            });\n            return this;\n        }\n\n        /**\n         * 发生事件。\n         */\n        public dispatchEvent(event: Util.IEvent<Sprite>): Sprite {\n            var type: string = event.gT();\n            Util.each(this._l[type] || [], (listener: Util.IEventListener<Sprite>) => {\n                listener.call(undefined, event);\n            });\n            return this;\n        }\n\n        /**\n         * 添加元素。\n         */\n        public a(element: Element, before?: string, step?: number): Sprite;\n        public a(element: Element, before?: Element, step?: number): Sprite;\n        public a(element: Element, before?: any, step?: number): Sprite {\n            var index: number = -1;\n            if ('string' == typeof before)\n                before = this.q(before)[0];\n            if (before)\n                index = Util.indexOf(this._d, before);\n            if (-1 == index)\n                index = this._d.length;\n            if (step)\n                index = index + step;\n            this._d.splice(index, 0, element.$p(this));\n            if (!this.gO())\n                return this;\n            return <Sprite> this.f();\n        }\n\n        /**\n         * 删除元素。\n         */\n        public e(element: Element): Sprite {\n            var index: number = Util.indexOf(this._d, element);\n            if (-1 != index)\n                this._d.splice(index, 1);\n            if (!this.gO())\n                return this;\n            return <Sprite> this.f();\n        }\n\n        /**\n         * 删除所有元素。\n         */\n        public c(): Sprite {\n            this._d = [];\n            if (!this.gO())\n                return this;\n            return <Sprite> this.f();\n        }\n\n        /**\n         * 根据编号查找元素。\n         */\n        public q(id: string): Element[] {\n            var result: Element[] = [];\n            Util.each(this._d, (element: Element) => {\n                if ('q' in element)\n                    result = result.concat((<Sprite> element).q(id));\n                if (element.gI() == id)\n                    result.push(element);\n            });\n            return result;\n        }\n\n        /**\n         * 根据座标查找元素。\n         */\n        protected $m(x: number, y: number): Sprite[] {\n            var els: Sprite[] = [],\n                bounds: IBounds;\n            Util.some(Util.clone(this._d).reverse(), (element: Sprite) => {\n                if (!('$m' in element) || !element.gO())\n                    return false;\n                bounds = element.gB();\n                if (bounds.x > x || bounds.y > y || bounds.x + bounds.w < x || bounds.y + bounds.h < y)\n                    return false;\n                els = els.concat(element.$m(x, y));\n                return !element._t;\n            });\n            return this._t ?\n                els :\n                els.concat(this);\n        }\n\n        /**\n         * 获取需绘制地图片集合。\n         */\n        protected $r(): Promise<HTMLImageElement>[] {\n            var resources: Promise<HTMLImageElement>[] = [];\n            Util.each(this._d, (element: Element) => {\n                if (!('$r' in element)) return;\n                resources = resources.concat((<Sprite> element).$r());\n            });\n            return resources;\n        }\n    }\n}\n","/**\n * 声明（画面）鼠标事件元信息接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Event/IMouseEventMetas.ts\n */\n\n/// <reference path=\"../../../include/tsd.d.ts\" />\n/// <reference path=\"../_Element/Stage.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export interface IMouseEventMetas extends Util.IEventMetas<Sprite> {\n        /**\n         * X 轴座标。\n         */\n        x: number;\n\n        /**\n         * Y 轴座标。\n         */\n        y: number;\n\n        /**\n         * 源对象。\n         */\n        from: Sprite;\n\n        /**\n         * 源 X 轴座标。\n         */\n        fromX: number;\n\n        /**\n         * 源 Y 轴座标。\n         */\n        fromY: number;\n\n        /**\n         * 舞台对象。\n         */\n        stage: Stage;\n    }\n}\n","/**\n * 定义画面抽象鼠标事件组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Event/SpriteMouseEvent.ts\n */\n\n/// <reference path=\"IMouseEventMetas.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export class SpriteMouseEvent implements Util.IEvent<Sprite> {\n        /**\n         * 事件触发对象。\n         */\n        public target: Sprite;\n\n        /**\n         * X 轴座标。\n         */\n        public x: number;\n\n        /**\n         * Y 轴座标。\n         */\n        public y: number;\n\n        /**\n         * 事件源对象。\n         */\n        public from: Sprite;\n\n        /**\n         * 源 X 轴座标。\n         */\n        public fromX: number;\n\n        /**\n         * 源 Y 轴座标。\n         */\n        public fromY: number;\n\n        /**\n         * 舞台对象。\n         */\n        public stage: Stage;\n\n        /**\n         * 构造函数。\n         */\n        constructor(metas: IMouseEventMetas) {\n            this.target = metas.target;\n            this.x = metas.x;\n            this.y = metas.y;\n            this.from = metas.from;\n            this.fromX = metas.fromX;\n            this.fromY = metas.fromY;\n            this.stage = metas.stage;\n        }\n\n        /**\n         * 获取类型。\n         */\n        public gT(): string {\n            return '';\n        }\n    }\n}\n","/**\n * 定义画面鼠标聚焦事件组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Event/SpriteFocusEvent.ts\n */\n\n/// <reference path=\"SpriteMouseEvent.ts\" />\n\nnamespace C2D {\n    export class SpriteFocusEvent extends SpriteMouseEvent {\n        /**\n         * 获取类型。\n         */\n        public gT(): string {\n            return 'focus';\n        }\n    }\n}\n","/**\n * 定义画面鼠标失焦事件组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Event/SpriteBlurEvent.ts\n */\n\n/// <reference path=\"SpriteMouseEvent.ts\" />\n\nnamespace C2D {\n    export class SpriteBlurEvent extends SpriteMouseEvent {\n        /**\n         * 获取类型。\n         */\n        public gT(): string {\n            return 'blur';\n        }\n    }\n}\n","/**\n * 定义画面鼠标移动事件组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Event/SpriteMouseMoveEvent.ts\n */\n\n/// <reference path=\"SpriteMouseEvent.ts\" />\n\nnamespace C2D {\n    export class SpriteMouseMoveEvent extends SpriteMouseEvent {\n        /**\n         * 获取类型。\n         */\n        public gT(): string {\n            return 'mousemove';\n        }\n    }\n}\n","/**\n * 定义画面鼠标点击事件组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Event/SpriteClickEvent.ts\n */\n\n/// <reference path=\"SpriteMouseEvent.ts\" />\n\nnamespace C2D {\n    export class SpriteClickEvent extends SpriteMouseEvent {\n        /**\n         * 获取类型。\n         */\n        public gT(): string {\n            return 'click';\n        }\n    }\n}\n","/**\n * 定义全画面舞台组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Element/Stage.ts\n */\n\n/// <reference path=\"Sprite.ts\" />\n/// <reference path=\"../_Event/SpriteFocusEvent.ts\" />\n/// <reference path=\"../_Event/SpriteBlurEvent.ts\" />\n/// <reference path=\"../_Event/SpriteMouseMoveEvent.ts\" />\n/// <reference path=\"../_Event/SpriteClickEvent.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export class Stage extends Sprite {\n        /**\n         * 画板上下文。\n         */\n        private _c: CanvasRenderingContext2D;\n\n        /**\n         * 缩放比例（DOM 座标至内部座标转换系数）。\n         */\n        private _z: number;\n\n        /**\n         * 绑定视图。\n         */\n        private _v: HTMLElement;\n\n        /**\n         * DOM 事件处理函数集合。\n         */\n        private _h: ((event: MouseEvent) => void)[];\n\n        /**\n         * 鼠标事件元信息。\n         */\n        private _m: IMouseEventMetas;\n\n        /**\n         * 鼠标座标对应组合元素树。\n         */\n        private _e: Sprite[];\n\n        /**\n         * 发生变化地组合元素序号。\n         */\n        private _u: number;\n\n        /**\n         * 绘制缓存。\n         */\n        private _k: [number, ImageData];\n\n        /**\n         * 构造函数。\n         */\n        constructor(context: CanvasRenderingContext2D) {\n            var canvas: HTMLCanvasElement = context.canvas;\n            super(0, 0, canvas.width, canvas.height, false, true);\n            this._c = context;\n            this.z();\n            this._m = {\n                target: this,\n                x: 0,\n                y: 0,\n                from: this,\n                fromX: 0,\n                fromY: 0,\n                stage: this\n            };\n            this._h = [\n                (event: MouseEvent) => {\n                    event.stopPropagation();\n                    var sprites: Sprite[][] = this.$s(event.offsetX * this._z, event.offsetY * this._z),\n                        ev: SpriteMouseEvent;\n                    if (sprites[0].length) {\n                        ev = new SpriteFocusEvent(this._m);\n                        Util.each(sprites[0], (element: Sprite) => {\n                            element.dispatchEvent(ev);\n                        });\n                    }\n                    if (sprites[2].length) {\n                        ev = new SpriteBlurEvent(this._m);\n                        Util.each(sprites[2], (element: Sprite) => {\n                            element.dispatchEvent(ev);\n                        });\n                    }\n                    if (sprites[1].length) {\n                        ev = new SpriteMouseMoveEvent(this._m);\n                        Util.each(sprites[1], (element: Sprite) => {\n                            element.dispatchEvent(ev);\n                        });\n                    }\n                    return false;\n                },\n                (event: MouseEvent) => {\n                    this.$c();\n                }\n            ];\n            this._e = [];\n            this._u = -1;\n            this._k = [0, undefined];\n            this.b(context.canvas);\n        }\n\n        /**\n         * 移动 X 轴座标。\n         */\n        public x(distance: number): Stage {\n            return this;\n        }\n\n        /**\n         * 移动 Y 轴座标。\n         */\n        public y(distance: number): Stage {\n            return this;\n        }\n\n        /**\n         * 缩放。\n         */\n        public s(ratio: number): Stage {\n            return this;\n        }\n\n        /**\n         * 旋转。\n         */\n        public r(degrees: number): Stage {\n            return this;\n        }\n\n        /**\n         * 发生变更。\n         */\n        public f(child?: Sprite): Stage {\n            var fresh: boolean = !this._f,\n                event: SpriteFocusEvent;\n            this._f = true;\n            if (child) {\n                Util.some(this._d, (element: Element, index: number) => {\n                    if (child == element) {\n                        this._u = index;\n                        return true;\n                    }\n                    return false;\n                });\n            } else\n                this._u = 0;\n            if (this._k[0] > this._u)\n                this._k = [0, undefined];\n            Util.each(this.$s(this._m.x, this._m.y)[0], (element: Sprite) => {\n                if (!event)\n                    event = new SpriteFocusEvent(this._m);\n                element.dispatchEvent(event);\n            });\n            if (fresh)\n                Animation.f(() => {\n                    this.d();\n                }, true);\n            return this;\n        }\n\n        /**\n         * 计算缩放比例。\n         */\n        public z(): Stage {\n            var canvas: HTMLCanvasElement = this._c.canvas;\n            this._z = canvas.width / canvas.scrollWidth;\n            return this;\n        }\n\n        /**\n         * 绘制。\n         */\n        public d(): Promise<CanvasRenderingContext2D> {\n            if (!this._f)\n                return Promise.resolve(this._c);\n            return Promise.all(this.$r())\n                .then(() => {\n                    this._f = false;\n                    return Util.Q.every(this._d, (element: Element, index: number) => {\n                        if (this._k[0]) {\n                            if (index < this._k[0])\n                                return this._c;\n                            if (index == this._k[0])\n                                this._c.putImageData(this._k[1], 0, 0);\n                        }\n                        if (index && index == this._u && this._u != this._k[0])\n                            this._k = [index, this._c.getImageData(0, 0, 1280, 720)];\n                        return element.d(this._c);\n                    });\n                });\n        }\n\n        /**\n         * 绑定视图。\n         */\n        public b(viewport: HTMLElement): Stage {\n            if (this._v) {\n                this._v.removeEventListener('mousemove', this._h[0]);\n                this._v.removeEventListener('click', this._h[1]);\n            }\n            this._v = viewport;\n            this._v.addEventListener('mousemove', this._h[0]);\n            this._v.addEventListener('click', this._h[1]);\n            return this;\n        }\n\n        /**\n         * 模拟点击。\n         */\n        public t(x?: number, y?: number): Stage {\n            x = x || this._m.x;\n            y = y || this._m.y;\n            var real: IMouseEventMetas = this._m;\n            if (x != this._m.x || y != this._m.y)\n                this.$s(x, y);\n            this.$c();\n            this._m = real;\n            return this;\n        }\n\n        /**\n         * 停止工作。\n         */\n        public h(): void {\n            this.f = () => this;\n            this._f = false;\n            this._v.removeEventListener('mousemove', this._h[0]);\n            this._v.removeEventListener('click', this._h[1]);\n        }\n\n        /**\n         * 根据座标查找元素。\n         */\n        protected $s(x: number, y: number): [Sprite[], Sprite[], Sprite[]] {\n            x |= 0;\n            y |= 0;\n            var sprites: [Sprite[], Sprite[], Sprite[]] = [[], [], []],\n                els: Sprite[] = this.$m(x, y).slice(0, -1), // 查找新座标点新树\n                bounds: IBounds,\n                inside: boolean,\n                out: boolean;\n            Util.each(this._e, (element: Sprite) => {\n                bounds = element.gB();\n                inside = -1 != Util.indexOf(els, element);\n                out = x < bounds.x || y < bounds.y || x > bounds.x + bounds.w || y > bounds.y + bounds.h;\n                if (!inside && !out) {\n                    inside = true;\n                    els.push(element);\n                }\n                sprites[inside ? 1 : 2].push(element);\n            });\n            this._e = els;\n            this._m.fromX = this._m.x;\n            this._m.fromY = this._m.y;\n            this._m.x = x;\n            this._m.y = y;\n            Util.each(els, (element: Sprite) => {\n                if (-1 == Util.indexOf(sprites[1], element))\n                    sprites[0].push(element);\n            });\n            this._m.target = sprites[0][0] || sprites[1][0];\n            this._m.from = sprites[2][0];\n            return sprites;\n        }\n\n        /**\n         * 模拟点击。\n         */\n        protected $c(): void {\n            if (!this._m.target) return;\n            var sprites: Sprite[] = [<Sprite> this._m.target],\n                parent: Sprite = sprites[0].$p(),\n                ev: SpriteClickEvent = new SpriteClickEvent(this._m);\n            while (parent && parent != this) {\n                sprites.push(parent);\n                parent = parent.$p();\n            }\n            Util.each(sprites, (element: Sprite) => {\n                element.dispatchEvent(ev);\n            });\n        }\n    }\n}\n","/**\n * 定义色块画面元素组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Element/Color.ts\n */\n\n/// <reference path=\"Element.ts\" />\n\nnamespace C2D {\n    export class Color extends Element {\n        /**\n         * 颜色值。\n         */\n        private _d: string;\n\n        /**\n         * 构造函数。\n         */\n        constructor(x: number, y: number, w: number, h: number, color: string, absolute?: boolean);\n        constructor(bounds: IBounds, color: string, absolute?: boolean);\n        constructor(x: any, y: any, w?: any, h?: any, color?: any, absolute?: boolean) {\n            if ('object' == typeof x) {\n                super(x, w);\n                this._d = y;\n            } else {\n                super(x, y, w, h, absolute);\n                this._d = color;\n            }\n        }\n\n        /**\n         * 绘制。\n         */\n        public d(context: CanvasRenderingContext2D): CanvasRenderingContext2D | Thenable<CanvasRenderingContext2D> {\n            var opacity: number = this.gO();\n            if (opacity) {\n                context.save();\n                context.globalAlpha = opacity;\n                var bounds: IBounds = this.gB();\n                context.fillStyle = this._d;\n                context.fillRect(bounds.x, bounds.y, bounds.w, bounds.h);\n                context.restore();\n            }\n            return super.d(context);\n        }\n\n        /**\n         * 获取名称。\n         */\n        public gN(): string {\n            return 'Color';\n        }\n    }\n}\n","/**\n * 定义图像画面元素组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Element/Image.ts\n */\n\n/// <reference path=\"Element.ts\" />\n\nnamespace C2D {\n    export class Image extends Element {\n        /**\n         * 数据。\n         */\n        private _d: Promise<HTMLImageElement>;\n\n        /**\n         * 平铺。\n         */\n        private _l: boolean;\n\n        /**\n         * 构造函数。\n         */\n        constructor(image: Promise<HTMLImageElement>, x?: number, y?: number, w?: number, h?: number, absolute?: boolean, tile?: boolean);\n        constructor(image: Promise<HTMLImageElement>, bounds?: IBounds, absolute?: boolean, tile?: boolean);\n        constructor(image: Promise<HTMLImageElement>, x?: any, y?: any, w?: any, h?: any, absolute?: any, tile?: boolean) {\n            super(x, y, w, h, absolute);\n            this._d = image;\n            if (!x || 'number' == typeof x) {\n                this._l = !!tile;\n            } else {\n                this._l = !!w;\n            }\n            if (!this._b.w || !this._b.h)\n                image.then((img: HTMLImageElement) => {\n                    if (this._b.w) {\n                        this._b.h = 0 | this._b.w * img.height / img.width;\n                    } else if (this._b.h) {\n                        this._b.w = 0 | this._b.h * img.width / img.height;\n                    } else {\n                        this._b.w = img.width;\n                        this._b.h = img.height;\n                    }\n                });\n        }\n\n        /**\n         * 绘制。\n         */\n        public d(context: CanvasRenderingContext2D): CanvasRenderingContext2D | Thenable<CanvasRenderingContext2D> {\n            var opacity: number = this.gO();\n            if (opacity) {\n                return this._d.then((img: HTMLImageElement) => {\n                    if (1 != opacity) {\n                        context.save();\n                        context.globalAlpha = opacity;\n                    }\n                    var bounds: IBounds = this.gB();\n                    this._l ? context.drawImage(img, bounds.x, bounds.y, bounds.w, bounds.h, bounds.x, bounds.y, bounds.w, bounds.h) :\n                        context.drawImage(img, bounds.x, bounds.y, bounds.w, bounds.h);\n                    if (1 != opacity)\n                        context.restore();\n                    return context;\n                });\n            }\n            return super.d(context);\n        }\n\n        /**\n         * 获取需绘制地图片集合。\n         */\n        protected $r(): Promise<HTMLImageElement>[] {\n            return [this._d];\n        }\n\n        /**\n         * 获取需绘制地图片。\n         */\n        public $d(): Promise<HTMLImageElement> {\n            return this._d;\n        }\n\n        /**\n         * 获取名称。\n         */\n        public gN(): string {\n            return 'Image';\n        }\n\n        /**\n         * 设置父元素。\n         */\n        public $p(parent?: Sprite): Sprite {\n            if (!parent && this._p)\n                return <Sprite> this._p;\n            return <Sprite> super.$p(parent);\n        }\n    }\n}\n","/**\n * 定义画面文字组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Element/TextPhrase.ts\n */\n\n/// <reference path=\"Text.ts\" />\n\nnamespace C2D {\n    export class TextPhrase {\n        /**\n         * 字体。\n         */\n        public static FONT: string = '\"Hiragino Sans GB\", \"Microsoft YaHei\", \"WenQuanYi Micro Hei\", Arial, sans-serif';\n\n        /**\n         * 内容。\n         */\n        private _t: string;\n\n        /**\n         * 颜色。\n         */\n        private _c: string;\n\n        /**\n         * 宿主。\n         */\n        private _p: Text;\n\n        /**\n         * 构造函数。\n         */\n        constructor(clob?: string, color?: string) {\n            this._t = (clob || '').toString();\n            this._c = color || '';\n        }\n\n        /**\n         * 设置文本内容。\n         */\n        public t(clob: string): TextPhrase {\n            this._t = clob.toString();\n            return this;\n        }\n\n        /**\n         * 设置颜色。\n         */\n        public c(color: string): TextPhrase {\n            this._c = color;\n            return this;\n        }\n\n        /**\n         * 设置主画面元素。\n         */\n        public p(text: Text): TextPhrase {\n            this._p = text;\n            return this;\n        }\n\n        /**\n         * 计算可绘制字符数。\n         */\n        public m(context: CanvasRenderingContext2D, maxWidth: number, offset?: number): [number, number] {\n            let clob: string = offset ?\n                    this._t.substr(offset) :\n                    this._t,\n                compare: (text: string, maxWidth2: number) => [number, number] = (text: string, maxWidth2: number) => {\n                    let length: number = text.length,\n                        result2: [number, number] = [length, context.measureText(text).width],\n                        result3: [number, number];\n                    if (result2[1] <= maxWidth2) // 可以完全绘制\n                        return result2;\n                    if (1 == length) // 完全无法绘制\n                        return [0, 0];\n                    length = 0 | length / 2; // 中分\n                    result2 = compare(text.substr(0, length), maxWidth2);\n                    if (length != result2[0]) // 前半段仍无法全部绘制\n                        return result2;\n                    result3 = compare(text.substr(length), maxWidth2 - result2[1]);\n                    result2[0] += result3[0];\n                    result2[1] += result3[1];\n                    return result2;\n                },\n                font: [number, number],\n                shadow: [number, number, number, string],\n                result: [number, number];\n            offset = clob.length;\n            if (!this._p || !offset)\n                return [0, 0];\n            font = this._p.gTf();\n            shadow = this._p.gTs();\n            context.save();\n            context.font = font[0] + 'px/' + font[1] + 'px ' + TextPhrase.FONT;\n            context.textBaseline = 'middle';\n            if (shadow[2]) {\n                context.shadowBlur = shadow[2];\n                context.shadowOffsetX = shadow[0];\n                context.shadowOffsetY = shadow[1];\n                context.shadowColor = shadow[3];\n            }\n            if (context.measureText(clob[0]).width > maxWidth) {\n                result = [0, 0];\n            } else\n                result = compare(clob, maxWidth);\n            context.restore();\n            return result;\n        }\n\n        /**\n         * 绘制。\n         */\n        public d(context: CanvasRenderingContext2D, x: number, y: number, offset?: number, length?: number): void {\n            if (!this._p) return;\n            let clob: string = this._t.substr(offset || 0, length || this._t.length),\n                color: string = this._c || this._p.gTc(),\n                font: [number, number] = this._p.gTf(),\n                shadow: [number, number, number, string] = this._p.gTs();\n            if (!clob.length) return;\n            context.save();\n            context.fillStyle = color;\n            context.font = font[0] + 'px/' + font[1] + 'px ' + TextPhrase.FONT;\n            context.textBaseline = 'middle';\n            if (shadow[2]) {\n                context.shadowBlur = shadow[2];\n                context.shadowOffsetX = shadow[0];\n                context.shadowOffsetY = shadow[1];\n                context.shadowColor = shadow[3];\n            }\n            context.fillText(clob, Math.ceil(x), Math.ceil(y));\n            context.restore();\n        }\n\n        /**\n         * 获取长度。\n         */\n        public gL(): number {\n            return this._t.length;\n        }\n\n        /**\n         * 截取。\n         */\n        public a(length: number): TextPhrase {\n            return new TextPhrase(this._t.substr(0, length), this._c);\n        }\n    }\n}\n","/**\n * 定义文字画面元素组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Element/Text.ts\n */\n\n/// <reference path=\"Element.ts\" />\n/// <reference path=\"TextPhrase.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export class Text extends Element {\n        /**\n         * 文本。\n         */\n        private _t: TextPhrase[];\n\n        /**\n         * 对齐方式。\n         */\n        private _l: Text.Align;\n\n        /**\n         * 字体配置（字号，行高，颜色）。\n         */\n        private _tf: [number, number, string];\n\n        /**\n         * 阴影配置（横向偏移，纵向偏移，大小，颜色）。\n         */\n        private _ts: [number, number, number, string];\n\n        /**\n         * 构造函数。\n         */\n        constructor(x: number, y: number, w: number, h: number, size?: number, lineHeight?: number, align?: Text.Align, absolute?: boolean);\n        constructor(bounds: IBounds, size?: number, lineHeight?: number, align?: Text.Align, absolute?: boolean);\n        constructor(x: any, y?: any, w?: any, h?: any, size?: any, lineHeight?: any, align?: any, absolute?: boolean) {\n            if ('object' == typeof x) {\n                super(x, size);\n                this._tf = [16, 24, '#000'];\n                this._tf[0] = 0 | y;\n                this._tf[1] = 0 | Math.max(y, w);\n                this._tf[2] = x['c'] || '#000';\n                this._l = h;\n            } else {\n                super(x, y, w, h, absolute);\n                this._tf = [16, 24, '#000'];\n                this._tf[0] = 0 | size;\n                this._tf[1] = 0 | Math.max(size, lineHeight);\n                this._l = align;\n            }\n            let aligns: typeof Text.Align = Text.Align;\n            switch (this._l) {\n                case aligns.Left:\n                case aligns.Center:\n                case aligns.Right:\n                    break;\n                default:\n                    this._l = aligns.Left;\n            }\n            this._t = [];\n            this._ts = [0, 0, 0, '#000'];\n        }\n\n        /**\n         * 缩放。\n         */\n        public s(ratio: number): Text {\n            if (1 == ratio)\n                return this;\n            this._tf[0] = 0 | this._tf[0] * ratio;\n            this._tf[1] = 0 | this._tf[1] * ratio;\n            this._ts[0] = 0 | this._ts[0] * ratio;\n            this._ts[1] = 0 | this._ts[1] * ratio;\n            this._ts[2] = 0 | this._ts[2] * ratio;\n            return <Text> super.s(ratio);\n        }\n\n        /**\n         * 绘制。\n         */\n        public d(context: CanvasRenderingContext2D): CanvasRenderingContext2D | Thenable<CanvasRenderingContext2D> {\n            var opacity: number = this.gO(),\n                schedules: [number, TextPhrase, number, number][][] = [[]], // width, TextPhrase, offset, length\n                line: [number, TextPhrase, number, number][] = schedules[0],\n                aligns: typeof Text.Align = Text.Align,\n                bounds: IBounds = this.gB(),\n                width: number = bounds.w,\n                m: [number, number], // length, width\n                offset: number;\n            if (opacity && this._t.length) {\n                Util.each(this._t, (phrase: TextPhrase) => {\n                    offset = 0;\n                    while (offset != phrase.gL()) {\n                        m = phrase.m(context, width, offset);\n                        if (m[0]) {\n                            line.push([m[1], phrase, offset, m[0]]);\n                            width -= m[1];\n                            offset += m[0];\n                        } else {\n                            line = [];\n                            schedules.push(line);\n                            width = bounds.w;\n                        }\n                    }\n                });\n                if (1 != opacity) {\n                    context.save();\n                    context.globalAlpha = opacity;\n                }\n                Util.each(schedules, (line2: [number, TextPhrase, number, number][], index: number) => {\n                    if (this._l != aligns.Left) {\n                        width = 0;\n                        Util.each(line2, (section: [number, TextPhrase, number, number]) => {\n                            width += section[0];\n                        });\n                        offset = bounds.w - width;\n                        if (this._l == aligns.Center)\n                            offset = 0 | offset / 2;\n                    } else\n                        offset = 0; // x\n                    offset += bounds.x;\n                    width = bounds.y + this._tf[1] * (1 + index); // y\n                    Util.each(line2, (section: [number, TextPhrase, number, number]) => {\n                        section[1].d(context, offset, width - this._tf[0], section[2], section[3]);\n                        offset += section[0];\n                    });\n                });\n                if (1 != opacity)\n                    context.restore();\n            }\n            return super.d(context);\n        }\n\n        /**\n         * 设置字号。\n         */\n        public tf(size: number, lineHeight?: number): Text {\n            this._tf[0] = 0 | size;\n            this._tf[1] = 0 | Math.max(size, lineHeight);\n            return this;\n        }\n\n        /**\n         * 获取字号。\n         */\n        public gTf(): [number, number] {\n            return <[number, number]> this._tf.slice(0, 2);\n        }\n\n        /**\n         * 设置颜色。\n         */\n        public tc(color: string): Text {\n            this._tf[2] = color || '#000';\n            return this;\n        }\n\n        /**\n         * 获取颜色。\n         */\n        public gTc(): string {\n            return this._tf[2];\n        }\n\n        /**\n         * 设置阴影。\n         */\n        public ts(size: number, offsetX?: number, offsetY?: number, color?: string): Text {\n            this._ts = [0 | offsetX, 0 | offsetY, 0 | size, color || '#000'];\n            return this;\n        }\n\n        /**\n         * 获取阴影（横向偏移，纵向偏移，大小，颜色）。\n         */\n        public gTs(): [number, number, number, string] {\n            return this._ts;\n        }\n\n        /**\n         * 添加文字。\n         */\n        public a(text: TextPhrase): Text {\n            this._t.push(text.p(this));\n            return <Text> this.f();\n        }\n\n        /**\n         * 获取文字。\n         */\n        public gT(): TextPhrase[] {\n            return <TextPhrase[]> this._t;\n        }\n\n        /**\n         * 清空所有已添加文字。\n         */\n        public c(): Text {\n            this._t = [];\n            return <Text> this.f();\n        }\n    }\n\n    export namespace Text {\n        /**\n         * 对齐方式。\n         */\n        export enum Align {\n            /**\n             * 左对齐。\n             */\n            Left,\n            /**\n             * 居中对齐。\n             */\n            Center,\n            /**\n             * 右对齐。\n             */\n            Right\n        };\n    }\n}\n","/**\n * 声明透明度渐变动画元信息接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/IFadeMetas.ts\n */\n\n/// <reference path=\"../../../include/tsd.d.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export interface IFadeMetas extends Util.IHashTable<any> {\n        /**\n         * 透明度。\n         */\n        opacity: number;\n    }\n}\n","/**\n * 定义透明度渐变动画组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/Fade.ts\n */\n\n/// <reference path=\"Animation.ts\" />\n/// <reference path=\"IFadeMetas.ts\" />\n/// <reference path=\"../_Element/Element.ts\" />\n\nnamespace C2D {\n    export class Fade extends Animation {\n        /**\n         * 原始透明度。\n         */\n        private _o: number;\n\n        /**\n         * 构造函数。\n         */\n        constructor(duration: number, metas: IFadeMetas) {\n            super(duration, metas);\n        }\n\n        /**\n         * 帧执行。\n         */\n        protected $p(element: Element, elpased: number): void {\n            if (1 == elpased)\n                this._o = element.gO();\n            element.o(((<IFadeMetas> this._m).opacity - this._o) * elpased / this._d + this._o);\n        }\n    }\n}\n","/**\n * 定义透明度渐显动画组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/FadeIn.ts\n */\n\n/// <reference path=\"Fade.ts\" />\n\nnamespace C2D {\n    export class FadeIn extends Fade {\n        /**\n         * 构造函数。\n         */\n        constructor(duration: number) {\n            super(duration, {\n                opacity: 1\n            });\n        }\n    }\n}\n","/**\n * 定义透明度渐隐动画组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/FadeOut.ts\n */\n\n/// <reference path=\"Fade.ts\" />\n\nnamespace C2D {\n    export class FadeOut extends Fade {\n        /**\n         * 构造函数。\n         */\n        constructor(duration: number) {\n            super(duration, {\n                opacity: 0\n            });\n        }\n    }\n}\n","/**\n * 定义冻结（延时）动画组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/Delay.ts\n */\n\n/// <reference path=\"Animation.ts\" />\n\nnamespace C2D {\n    export class Delay extends Animation {\n    }\n}\n","/**\n * 定义画面按钮元素组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Element/Stage.ts\n */\n\n/// <reference path=\"Sprite.ts\" />\n/// <reference path=\"../_Event/SpriteMouseEvent.ts\" />\n/// <reference path=\"../_Animation/FadeIn.ts\" />\n/// <reference path=\"../_Animation/FadeOut.ts\" />\n/// <reference path=\"../_Animation/Delay.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export class Button extends Sprite {\n        /**\n         * 按钮延时。\n         */\n        private _y: number;\n\n        /**\n         * 已点击。\n         */\n        private _c: boolean;\n\n        /**\n         * 构造函数。\n         */\n        constructor(x: number, y: number, w: number, h: number, delay?: number, absolute?: boolean);\n        constructor(bounds: IBounds, delay?: number, absolute?: boolean);\n        constructor(x: any, y?: any, w?: any, h?: any, delay?: number, absolute?: boolean) {\n            if ('object' == typeof x) {\n                super(x, false, w);\n                this._y = 0 | y;\n            } else {\n                super(x, y, w, h, false, absolute);\n                this._y = 0 | delay;\n            }\n            this._y = this._y || 100;\n            this._c = false;\n        }\n\n        /**\n         * 绑定功能。\n         */\n        public b(callback: Util.IEventListener<Button>, hover?: Element, defaults?: Element): Button {\n            if (defaults)\n                this.a(defaults.o(1));\n            if (hover)\n                this.a(hover.o(0));\n            var animes: Animation[] = [],\n                anime: Animation;\n            return <Button> this.addEventListener('focus', () => {\n                Util.each(animes, (animation: Animation) => {\n                    animation.h();\n                });\n                animes = [];\n                if (hover) {\n                    anime = new FadeIn(250);\n                    animes.push(anime);\n                    hover.p(anime);\n                }\n            }).addEventListener('blur', () => {\n                Util.each(animes, (animation: Animation) => {\n                    animation.h();\n                });\n                animes = [];\n                if (hover) {\n                    anime = new FadeOut(250);\n                    animes.push(anime);\n                    hover.p(anime);\n                }\n            }).addEventListener('click', (event: Util.IEvent<Button>) => {\n                Util.each(animes, (animation: Animation) => {\n                    animation.h();\n                });\n                if (hover)\n                    hover.o(1);\n                if (this._c) return;\n                this._c = true;\n                callback(event);\n                this.p(new Delay(this._y)).then(() => {\n                    this._c = false;\n                });\n            });\n        }\n    }\n}\n","/**\n * 定义画面组合动画组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/Combo.ts\n */\n\n/// <reference path=\"Animation.ts\" />\n/// <reference path=\"../_Element/Element.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export class Combo extends Animation {\n        /**\n         * 动画组合。\n         */\n        private _a: Animation[];\n\n        /**\n         * 构造函数。\n         */\n        constructor(animations: Animation[]) {\n            super(Infinity);\n            this._a = animations;\n        }\n\n        /**\n         * 执行。\n         */\n        public $p(element: Element, elapsed: number, done: () => void): void {\n            if (1 == elapsed) {\n                var p: Promise<Element>[] = [];\n                Util.each(this._a, (anime: Animation) => {\n                    p.push(anime.p(element));\n                });\n                Promise.all(p).then(done);\n            }\n        }\n\n        /**\n         * 中止处理。\n         */\n        public $h(): void {\n            Util.each(this._a, (anime: Animation) => {\n                anime.h();\n            });\n        }\n    }\n}\n","/**\n * 声明音频音量渐变动画元信息接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/IAudioFadeMetas.ts\n */\n\n/// <reference path=\"../../../include/tsd.d.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export interface IAudioFadeMetas extends Util.IHashTable<any> {\n        /**\n         * 音量。\n         */\n        volume: number;\n    }\n}\n","/**\n * 定义透明度渐变动画组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/AudioFadeOut.ts\n */\n\n/// <reference path=\"Animation.ts\" />\n/// <reference path=\"IAudioFadeMetas.ts\" />\n\nnamespace C2D {\n    export class AudioFadeOut extends Animation {\n        /**\n         * 原始音量。\n         */\n        private _v: number;\n\n        /**\n         * 构造函数。\n         */\n        constructor(duration: number) {\n            super(duration, <IAudioFadeMetas> {\n                volume: 0\n            });\n        }\n\n        /**\n         * 帧执行。\n         */\n        protected $p(element: HTMLAudioElement, elpased: number): void {\n            if (1 == elpased)\n                this._v = element.volume;\n            element.volume = this._v - this._v * elpased / this._d;\n        }\n    }\n}\n","/**\n * 声明位移动画元信息接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/IMoveMetas.ts\n */\n\n/// <reference path=\"../../../include/tsd.d.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export interface IMoveMetas extends Util.IHashTable<any> {\n        /**\n         * X 轴座标。\n         */\n        x: number;\n\n        /**\n         * Y 轴座标。\n         */\n        y: number;\n    }\n}\n","/**\n * 定义位移动画组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/Move.ts\n */\n\n/// <reference path=\"Animation.ts\" />\n/// <reference path=\"IMoveMetas.ts\" />\n/// <reference path=\"../_Element/Element.ts\" />\n\nnamespace C2D {\n    export class Move extends Animation {\n        /**\n         * 原始 X 座标。\n         */\n        private _x: number;\n\n        /**\n         * 原始 Y 座标。\n         */\n        private _y: number;\n\n        /**\n         * 构造函数。\n         */\n        constructor(duration: number, metas: IMoveMetas) {\n            super(duration, metas);\n        }\n\n        /**\n         * 帧执行。\n         */\n        protected $p(element: Element, elpased: number): void {\n            if (1 == elpased) {\n                var bounds: IBounds = element.gB();\n                this._x = bounds.x;\n                this._y = bounds.y;\n            }\n            element.x(((<IMoveMetas> this._m).x - this._x) * elpased / this._d + this._x)\n                .y(((<IMoveMetas> this._m).y - this._y) * elpased / this._d + this._y);\n        }\n    }\n}\n","/**\n * 定义打字效果动画组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/Type.ts\n */\n\n/// <reference path=\"Animation.ts\" />\n/// <reference path=\"../_Element/Text.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export class Type extends Animation {\n        /**\n         * 速度（单位：帧／字）。\n         */\n        private _r: number;\n\n        /**\n         * 文字集合。\n         */\n        private _s: TextPhrase[];\n\n        /**\n         * 构造函数。\n         */\n        constructor(rate?: number) {\n            super(17);\n            this._r = rate || 1;\n            if (0 > this._r)\n                this._r = 1;\n        }\n\n        /**\n         * 帧执行。\n         */\n        protected $p(element: Text, elpased: number): void {\n            var length: number = 0;\n            if (1 == elpased) {\n                Util.each(this._s = element.gT(), (phrase: TextPhrase) => {\n                    length += phrase.gL();\n                });\n                this._d = 0 | length * this._r;\n                this._r = this._d / length;\n            }\n            elpased = 0 | elpased / this._r;\n            element.c().o(1);\n            Util.each(this._s, (phrase: TextPhrase) => {\n                length = phrase.gL();\n                if (length < elpased) {\n                    element.a(phrase);\n                    elpased -= length;\n                } else if (elpased) {\n                    element.a(phrase.a(elpased));\n                    elpased = 0;\n                }\n            });\n        }\n\n        /**\n         * 中止。\n         */\n        public $h(): void {\n            (<Text> this._t).c();\n            Util.each(this._s, (phrase: TextPhrase) => {\n                (<Text> this._t).a(phrase);\n            });\n        }\n    }\n}\n","/**\n * 定义打字延时动画组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/TypeDelay.ts\n */\n\n/// <reference path=\"Delay.ts\" />\n/// <reference path=\"../_Element/Text.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export class TypeDelay extends Delay {\n        /**\n         * 速度（单位：帧／字）。\n         */\n        private _r: number;\n\n        /**\n         * 构造函数。\n         */\n        constructor(rate?: number) {\n            super(17);\n            this._r = rate || 1;\n            if (0 > this._r)\n                this._r = 1;\n        }\n\n        /**\n         * 执行。\n         */\n        public $p(element: Text, elapsed: number): void {\n            if (1 == elapsed) {\n                var length: number = 0;\n                Util.each(element.gT(), (phrase: TextPhrase) => {\n                    length += phrase.gL();\n                });\n                this._d = 0 | length * this._r;\n            }\n        }\n    }\n}\n","/**\n * 定义等待点击动画组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/WaitForClick.ts\n */\n\n/// <reference path=\"Animation.ts\" />\n/// <reference path=\"../_Event/SpriteClickEvent.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export class WaitForClick extends Animation {\n        /**\n         * 功能函数。\n         */\n        private _f: Util.IEventListener<Sprite>;\n\n        /**\n         * 中止函数。\n         */\n        private _r: () => void;\n\n        /**\n         * 构造函数。\n         */\n        constructor(callback?: Util.IEventListener<Sprite>) {\n            super(Infinity);\n            this._f = callback;\n        }\n\n        /**\n         * 执行。\n         */\n        public $p(element: Sprite, elapsed: number, done: () => void): void {\n            if (1 == elapsed) {\n                var type: string = 'click',\n                    handler: Util.IEventListener<Sprite> = (event: SpriteClickEvent) => {\n                        if (this._f)\n                            this._f.call(undefined, event);\n                        this._r();\n                    };\n                this._r = () => {\n                    element.removeEventListener(type, handler);\n                    done();\n                };\n                element.addEventListener(type, handler);\n            }\n        }\n\n        /**\n         * 中止。\n         */\n        public $h(): void {\n            if (this._r)\n                this._r();\n        }\n    }\n}\n","/**\n * 声明百叶窗动画元信息接口规范。\n *\n * @author    李倩 <qli@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/IShutterMetas.ts\n */\n\n/// <reference path=\"../../../include/tsd.d.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export interface IShutterMetas extends Util.IHashTable<any> {\n        /**\n         * 水平或垂直。\n         */\n        direction: string;\n    }\n}\n","/**\n * 定义百叶窗渐变动画组件。\n *\n * @author    李倩 <qli@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/Shutter.ts\n */\n\n/// <reference path=\"Animation.ts\" />\n/// <reference path=\"IShutterMetas.ts\" />\n/// <reference path=\"../_Element/Image.ts\" />\n/// <reference path=\"../_Element/Stage.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export class Shutter extends Animation {\n        /**\n         * 创建的临时叶片数组。\n         */\n        private _cs: Image[];\n\n        /**\n         * 构造函数。\n         */\n        constructor(duration: number, metas: IShutterMetas) {\n            super(duration, metas);\n            this._cs = [];\n        }\n\n        /**\n         * 帧执行。\n         */\n        protected $p(element: Element, elpased: number): void {\n            let count: number = 10,\n                maxH: number = Math.round(720 / count),\n                maxW: number = Math.round(1280 / count),\n                parent: Stage = <Stage> (<Image> element).$p(),\n                metas: IShutterMetas = <IShutterMetas> this._m;\n            switch (elpased) {\n                case 1:\n                    this._cs = [];\n                    for (var i: number = 0; i < count; i++) {\n                        let bound: IBounds = metas.direction == 'H' ?\n                            { x: 0, y: maxH * i, w: 1280, h: Math.ceil(maxH / this._d) } :\n                            { x: maxW * i, y: 0, w: Math.ceil(maxW / this._d), h: 720 },\n                            image: Image = new Image((<Image> element).$d(), bound, false, true);\n                        parent.a(image, element, 1);\n                        this._cs.push(image);\n                    }\n                    break;\n\n                case this._d:\n                    element.o(1);\n                    Util.each(this._cs, (image: Image) => {\n                        parent.e(image);\n                    });\n                    this._cs = [];\n                    break;\n\n                default:\n                    Util.each(this._cs, (image: Image) => {\n                        metas.direction == 'H' ?\n                            image.sH(Math.ceil(maxH / this._d * elpased)) :\n                            image.sW(Math.ceil(maxW / this._d * elpased));\n                    });\n                    break;\n            }\n        }\n    }\n}\n","/**\n * 声明放大缩小镜头动画元信息接口规范。\n *\n * @author    李倩 <qli@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/IZoomMetas.ts\n */\n\n/// <reference path=\"../../../include/tsd.d.ts\" />\n\nnamespace C2D {\n    import Util = __Bigine_Util;\n\n    export interface IZoomMetas extends Util.IHashTable<any> {\n        /**\n         * 镜头 X 轴系数。\n         */\n        mx: number;\n\n        /**\n         * 镜头 Y 轴系数。\n         */\n        my: number;\n\n        /**\n         * 放大/缩小系数。\n         */\n        scale: number;\n    }\n}\n","/**\n * 定义放大缩小镜头动画组件。\n *\n * @author    李倩 <qli@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/Zoom.ts\n */\n\n/// <reference path=\"Animation.ts\" />\n/// <reference path=\"IZoomMetas.ts\" />\n/// <reference path=\"../_Element/Element.ts\" />\n\nnamespace C2D {\n    export class Zoom extends Animation {\n        /**\n         * 原始 IBounds。\n         */\n        private _b: IBounds;\n\n        /**\n         * 构造函数。\n         */\n        constructor(duration: number, metas: IZoomMetas) {\n            super(duration, metas);\n        }\n\n        /**\n         * 帧执行。\n         */\n        protected $p(element: Element, elpased: number): void {\n            if (1 == elpased)\n                this._b = element.gB();\n            let metas: IZoomMetas = <IZoomMetas> this._m,\n                scale: number = metas.scale,\n                px: number = scale * (5 / 3 - 1) * 1280 / this._d,\n                py: number = scale * (5 / 3 - 1) * 720 / this._d;\n            element.x(Math.round(this._b.x - metas.mx * px * elpased))\n                .y(Math.round(this._b.y - metas.my * py * elpased))\n                .sW(Math.round(this._b.w + px * elpased))\n                .sH(Math.round(this._b.h + py * elpased));\n        }\n    }\n}\n","/**\n * 定义抖动镜头动画组件。\n *\n * @author    李倩 <qli@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      C2D/_Animation/Shake.ts\n */\n\n/// <reference path=\"Animation.ts\" />\n/// <reference path=\"../_Element/Element.ts\" />\n\nnamespace C2D {\n    export class Shake extends Animation {\n        /**\n         * 原始 X 座标。\n         */\n        private _x: number;\n\n        /**\n         * 原始 Y 座标。\n         */\n        private _y: number;\n\n        /**\n         * 构造函数。\n         */\n        constructor(duration: number) {\n            super(duration || 500);\n        }\n\n        /**\n         * 帧执行。\n         */\n        protected $p(element: Element, elpased: number): void {\n            if (1 == elpased) {\n                var bounds: IBounds = element.gB();\n                this._x = bounds.x;\n                this._y = bounds.y;\n            }\n\n            if (this._d == elpased) {\n                element.x(this._x)\n                    .y(this._y);\n            } else {\n                var mod: number = elpased % 4,\n                    rector: number = 4;\n                switch (mod) {\n                    case 1:\n                        element.x(this._y + rector);\n                        break;\n                    case 2:\n                        element.y(this._x + rector);\n                        break;\n                    case 3:\n                        element.x(this._x);\n                        break;\n                    default:\n                        element.y(this._y);\n                        break;\n                }\n            }\n        }\n    }\n}\n","/**\n * 定义包主程序文件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2016 Dahao.de\n * @license   GPL-3.0\n * @file      @c2d.ts\n */\n\n/// <reference path=\"C2D/_Element/Stage.ts\" />\n/// <reference path=\"C2D/_Element/Color.ts\" />\n/// <reference path=\"C2D/_Element/Image.ts\" />\n/// <reference path=\"C2D/_Element/Text.ts\" />\n/// <reference path=\"C2D/_Element/Button.ts\" />\n/// <reference path=\"C2D/_Animation/Combo.ts\" />\n/// <reference path=\"C2D/_Animation/AudioFadeOut.ts\" />\n/// <reference path=\"C2D/_Animation/FadeIn.ts\" />\n/// <reference path=\"C2D/_Animation/FadeOut.ts\" />\n/// <reference path=\"C2D/_Animation/Move.ts\" />\n/// <reference path=\"C2D/_Animation/Type.ts\" />\n/// <reference path=\"C2D/_Animation/TypeDelay.ts\" />\n/// <reference path=\"C2D/_Animation/WaitForClick.ts\" />\n/// <reference path=\"C2D/_Animation/Shutter.ts\" />\n/// <reference path=\"C2D/_Animation/Zoom.ts\" />\n/// <reference path=\"C2D/_Animation/Shake.ts\" />\n\nnamespace C2D {\n    export var version: string = '${BIGINE_MODULE_VERSION}';\n}\n"],"sourceRoot":"/source/"}